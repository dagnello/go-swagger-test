package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*ParameterDefinition parameter definition

swagger:model ParameterDefinition
*/
type ParameterDefinition struct {

	/* generator
	 */
	Generator *ParameterGenerator `json:"generator,omitempty"`

	/* Parameter name

	Required: true
	*/
	Name *string `json:"name"`
}

// Validate validates this parameter definition
func (m *ParameterDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGenerator(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ParameterDefinition) validateGenerator(formats strfmt.Registry) error {

	if swag.IsZero(m.Generator) { // not required
		return nil
	}

	if m.Generator != nil {

		if err := m.Generator.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *ParameterDefinition) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}
